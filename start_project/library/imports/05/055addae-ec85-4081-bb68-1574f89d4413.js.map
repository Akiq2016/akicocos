{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","acceleration","jumpAudio","default","url","AudioClip","onLoad","jumpAction","setJumpAction","node","runAction","leftAccelarate","rightAccelarate","xSpeed","initKeyboardEvent","start","update","dt","Math","abs","x","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","audioEngine","playEffect","repeatForever","sequence","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","left","right","KEY_UP"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n  // cc.Component:\r\n  // basic class for all the components\r\n  // if `extends` property is declared, the constructor of this specific class will be auto invoked\r\n  extends: cc.Component,\r\n\r\n  // By declaring properties in the component script,\r\n  // these properties can be visualized in the Property inspector,\r\n  // making it easy to adjust values in the scene.\r\n  properties: {\r\n    jumpHeight: 0,\r\n    jumpDuration: 0,\r\n    maxMoveSpeed: 0,\r\n    acceleration: 0,\r\n    jumpAudio: {\r\n      default: null,\r\n      url: cc.AudioClip,\r\n    },\r\n  },\r\n\r\n  // at the stage of `onLoad`, other nodes and their assets can be accessed.\r\n  // `onLoad` method always be executed before any `start` method.\r\n  onLoad () {\r\n    this.jumpAction = this.setJumpAction();\r\n\r\n    // `this.node` access current component node\r\n    // some related api: `runAction` `stopAction` `stopAllActions`\r\n    this.node.runAction(this.jumpAction);\r\n\r\n    this.leftAccelarate = false;\r\n    this.rightAccelarate = false;\r\n\r\n    this.xSpeed = 0;\r\n\r\n    this.initKeyboardEvent();\r\n  },\r\n\r\n  // executed after `onLoad` of all the components\r\n  start () {\r\n  },\r\n\r\n  /**\r\n   * `update` will be called once per frame after the scene is loaded\r\n   * Generally put the stuff that needs to be calculated frequently or updated in time.\r\n   * \r\n   * @param {number} dt delta time\r\n   */\r\n  update: function (dt) {\r\n    // 1. update speed: v = v0 + at\r\n    if (this.leftAccelarate) {\r\n      this.xSpeed -= this.acceleration * dt;\r\n    } else if (this.rightAccelarate) {\r\n      this.xSpeed += this.acceleration * dt;\r\n    }\r\n\r\n    // if speed reach limit, use max speed with current direction\r\n    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n      this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n    }\r\n\r\n    // 2. update position: x = x0 + vt\r\n    this.node.x += this.xSpeed * dt;\r\n  },\r\n\r\n  /**\r\n   * setJumpAction\r\n   * @return {ActionInterval}\r\n   */\r\n  setJumpAction: function () {\r\n    // using cc.p to create a cc.Vec2 object which is represented 2D vectors and coordinates\r\n    // cc.moveBy(duration<Number>, deltaPos<Vec2|Number>)\r\n    // cc.sequence(actions) The actions are performed in sequence.\r\n    var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n    var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n    var callback = cc.callFunc(function () {\r\n      cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    }, this);\r\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n  },\r\n\r\n  initKeyboardEvent: function () {\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\r\n      switch(event.keyCode) {\r\n        case cc.KEY.left:\r\n          this.leftAccelarate = true;\r\n          break;\r\n        case cc.KEY.right:\r\n          this.rightAccelarate = true;\r\n          break;\r\n      }\r\n    }, this);\r\n\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\r\n      switch(event.keyCode) {\r\n        case cc.KEY.left:\r\n          this.leftAccelarate = false;\r\n          break;\r\n        case cc.KEY.right:\r\n          this.rightAccelarate = false;\r\n          break;\r\n      }\r\n    }, this);\r\n  },\r\n});\r\n"]}