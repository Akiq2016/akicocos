{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","acceleration","jumpAudio","default","type","AudioClip","onLoad","enabled","leftAccelarate","rightAccelarate","xSpeed","maxMoveX","node","parent","width","initKeyboardEvent","start","onEnable","runAction","setJumpAction","update","dt","Math","abs","x","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","audioEngine","play","repeatForever","sequence","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","macro","KEY","left","right","KEY_UP"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n  // cc.Component:\r\n  // basic class for all the components\r\n  // if `extends` property is declared, the constructor of this specific class will be auto invoked\r\n  extends: cc.Component,\r\n\r\n  // By declaring properties in the component script,\r\n  // these properties can be visualized in the Property inspector,\r\n  // making it easy to adjust values in the scene.\r\n  properties: {\r\n    jumpHeight: 0,\r\n    jumpDuration: 0,\r\n    maxMoveSpeed: 0,\r\n    acceleration: 0,\r\n    jumpAudio: {\r\n      default: null,\r\n      type: cc.AudioClip,\r\n    },\r\n  },\r\n\r\n  // at the stage of `onLoad`, other nodes and their assets can be accessed.\r\n  // `onLoad` method always be executed before any `start` method.\r\n  onLoad () {\r\n    this.enabled = false;\r\n\r\n    this.leftAccelarate = false;\r\n    this.rightAccelarate = false;\r\n    this.xSpeed = 0;\r\n    this.maxMoveX = this.node.parent.width - this.node.width\r\n\r\n    this.initKeyboardEvent();\r\n  },\r\n\r\n  // executed after `onLoad` of all the components\r\n  start () {\r\n  },\r\n\r\n  onEnable () {\r\n    this.node.runAction(this.setJumpAction());\r\n  },\r\n\r\n  /**\r\n   * `update` will be called once per frame after the scene is loaded\r\n   * Generally put the stuff that needs to be calculated frequently or updated in time.\r\n   * \r\n   * @param {number} dt delta time\r\n   */\r\n  update: function (dt) {\r\n    // 1. update speed: v = v0 + at\r\n    if (this.leftAccelarate) {\r\n      this.xSpeed -= this.acceleration * dt;\r\n    } else if (this.rightAccelarate) {\r\n      this.xSpeed += this.acceleration * dt;\r\n    }\r\n\r\n    // if speed reach limit, use max speed with current direction\r\n    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n      this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n    }\r\n\r\n    // 2. update position: x = x0 + vt\r\n    if (Math.abs(this.node.x + this.xSpeed * dt) < (this.maxMoveX / 2)) {\r\n      this.node.x += this.xSpeed * dt;\r\n    } else {\r\n      // as it touch the boundary, to let him back,\r\n      // instead of letting xSpeed slowly slow down to 0 and having speed in the opposite direction,\r\n      // set it's xSpeed to 0 directly.\r\n      this.xSpeed = 0;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * setJumpAction\r\n   * @return {ActionInterval}\r\n   */\r\n  setJumpAction: function () {\r\n    // using cc.v2 to create a cc.Vec2 object which is represented 2D vectors and coordinates\r\n    // cc.moveBy(duration<Number>, deltaPos<Vec2|Number>)\r\n    // cc.sequence(actions) The actions are performed in sequence.\r\n    var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n    var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n    var callback = cc.callFunc(function () {\r\n      cc.audioEngine.play(this.jumpAudio, false);\r\n    }, this);\r\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n  },\r\n\r\n  initKeyboardEvent: function () {\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\r\n      switch(event.keyCode) {\r\n        case cc.macro.KEY.left:\r\n          this.leftAccelarate = true;\r\n          break;\r\n        case cc.macro.KEY.right:\r\n          this.rightAccelarate = true;\r\n          break;\r\n      }\r\n    }, this);\r\n\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\r\n      switch(event.keyCode) {\r\n        case cc.macro.KEY.left:\r\n          this.leftAccelarate = false;\r\n          break;\r\n        case cc.macro.KEY.right:\r\n          this.rightAccelarate = false;\r\n          break;\r\n      }\r\n    }, this);\r\n  },\r\n});\r\n"]}